apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: portfolio-builder
data:
  NODE_ENV: production
  PORT: "8080"
  DB_HOST: mysql-service
  DB_PORT: "3306"
  DB_NAME: portfolio_builder
  DB_USER: portfolio_user
  FRONTEND_URL: http://localhost:4200
---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
  namespace: portfolio-builder
type: Opaque
data:
  DB_PASSWORD: cG9ydGZvbGlvX3Bhc3N3b3Jk # base64 encoded "portfolio_password"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: portfolio-builder
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: portfolio-backend:latest
        ports:
        - containerPort: 8080
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: PORT
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: DB_PASSWORD
        - name: FRONTEND_URL
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: FRONTEND_URL
        livenessProbe:
          httpGet:
            path: /api/portfolio/list
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/portfolio/list
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: portfolio-builder
spec:
  selector:
    app: backend
  ports:
  - port: 8080
    targetPort: 8080
  type: LoadBalancer
